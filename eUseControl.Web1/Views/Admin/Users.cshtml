@model List<eUseControl.Domain.Entities.User.UDbTable>

@using eUseControl.Domain.Enums
@using System
@using System.Linq

@{
    ViewBag.Title = "Registered Users";

    var levels = Enum.GetValues(typeof(LevelAcces)).Cast<LevelAcces>().ToList();

    LevelAcces? selectedLevel = null;
    if (ViewBag.FilterLevel != null)
    {
        LevelAcces parsedLevel;
        if (Enum.TryParse<LevelAcces>(ViewBag.FilterLevel.ToString(), out parsedLevel))
        {
            selectedLevel = parsedLevel;
        }
    }

    string searchTerm = ViewBag.SearchTerm ?? "";
}

<h2>@ViewBag.Title</h2>

<form method="get" action="@Url.Action("Users", "Admin")" class="form-inline mb-3">
    <input type="text" name="searchTerm" value="@searchTerm" placeholder="Caută după username sau email" class="form-control mr-2" />

    <select name="filterLevel" class="form-control mr-2">
        <option value="">Toate nivelurile</option>
        @foreach (var level in levels)
        {
            <option value="@level" @(selectedLevel.HasValue && selectedLevel.Value == level ? "selected" : "")>@level.ToString()</option>
        }
    </select>

    <button type="submit" class="btn btn-primary">Filtrează</button>
</form>

<table class="table table-striped table-bordered">
    <thead>
        <tr>
            <th>ID</th>
            <th>Username</th>
            <th>Email</th>
            <th>Last Login</th>
            <th>Last IP</th>
            <th>Acțiuni</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var user in Model)
        {
            <tr>
                <td>@user.Id</td>
                <td>@user.Username</td>
                <td>@user.Email</td>
                <td>
                    @(
                        user.LastLogin != default(DateTime)
                        ? user.LastLogin.ToString("g")
                        : "-"
                    )
                </td>
                <td>@user.LastIp</td>
                <td>
                    @using (Html.BeginForm("DeleteUser", "Admin", FormMethod.Post, new { onsubmit = "return confirm('Ești sigur că vrei să ștergi acest utilizator?');" }))
                    {
                        @Html.Hidden("id", user.Id)
                        <button type="submit" class="btn btn-danger btn-sm mb-1">Șterge</button>
                    }

                    @using (Html.BeginForm("ToggleActive", "Admin", FormMethod.Post, new { onsubmit = "return confirm('Ești sigur că vrei să " + (user.IsActive ? "dezactivezi" : "reactivezi") + " acest utilizator?');" }))
                    {
                        @Html.Hidden("id", user.Id)
                        if (user.IsActive)
                        {
                            <button type="submit" class="btn btn-warning btn-sm mb-1">Dezactivează</button>
                        }
                        else
                        {
                            <button type="submit" class="btn btn-success btn-sm mb-1">Reactivează</button>
                        }
                    }

                    @using (Html.BeginForm("ResetPassword", "Admin", FormMethod.Post, new { onsubmit = "return confirm('Resetezi parola utilizatorului?');" }))
                    {
                        @Html.Hidden("id", user.Id)
                        <button type="submit" class="btn btn-secondary btn-sm">Resetează parola</button>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
